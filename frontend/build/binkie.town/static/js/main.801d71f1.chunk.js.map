{"version":3,"sources":["Components/Body/JungleSearch/assets/fauna/plant1.jpg","Components/Body/JungleSearch/assets/fauna/plant2.png","Components/Body/JungleSearch/assets/fauna/plant3.png","Components/Body/JungleSearch/assets/fauna/plant4.png","Components/Body/JungleSearch/assets/fauna/plant5.png","Components/Body/JungleSearch/assets/fauna/montsera.png","Components/Body/JungleSearch/assets/fauna/heart.png","Components/Body/JungleSearch/assets/animals/koala.jpg","Components/Body/JungleSearch/assets/animals/cat.jpg","Components/Body/JungleSearch/assets/animals/cat2.jpg","Components/Body/JungleSearch/assets/animals/dog.jpg","Components/Body/JungleSearch/assets/animals/dog2.jpg","Components/Body/JungleSearch/assets/animals/dog3.jpg","Components/Body/JungleSearch/assets/animals/chicken.jpg","Components/Body/JungleSearch/assets/animals/horse.jpg","Components/Body/JungleSearch/assets/animals/spider.jpg","assets/fonts/Ogg-Roman.otf","Components/shared/Chunk.js","Components/Body/JungleSearch/JungleScene.js","utils.js","Components/shared/ChunkDesc.js","Components/Body/JungleSearch/JungleChunk.js","Components/Body/JungleSearch/JungleSearch.js","Components/Body/JungleSearch/index.js","Components/Body/index.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/Footer/index.js","Components/Header/data.js","Components/Header/Binkie.js","Components/Header/Header.js","Components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Chunk","styled","div","_templateObject","JungleBox","img","JungleScene_templateObject","JungleScene","state","transition","startDrag","_this","setState","stopDrag","_this$props","this","props","x","y","w","plant","react_default","a","createElement","react_draggable_default","onStart","onStop","style","width","concat","left","top","height","src","draggable","Component","shuffle","i","length","j","Math","floor","random","_ref","ChunkDesc","figcaption","ChunkDesc_templateObject","theme","grey","JungleChunk","JungleChunk_templateObject","animals","Koala","Cat","Cat2","Dog","Dog2","Dog3","Chicken","Horse","Spider","plantsArray","Plant1","Montsera","Heart","Plant2","Plant3","Plant4","Plant5","ShuffleBtn","button","JungleSearch_templateObject","randomNumber","max","min","JungleSearch","bg","plants","splice","_this$state","JungleSearch_JungleChunk","key","backgroundImage","map","JungleSearch_JungleScene","onClick","role","aria-label","shared_ChunkDesc","Body","shared_Chunk","Body_JungleSearch","Contact","Footer_templateObject","Footer","messages","Binkie","h1","Binkie_templateObject","colors","randomInt","Header","message","shadow","reRainbow","_this2","setTimeout","console","log","minHeight","Header_Binkie","textShadow","onMouseOver","main","gradient","GlobalStyle","createGlobalStyle","App_templateObject","Ogg","AppCont","_templateObject2","Container","_templateObject3","client","ApolloClient","uri","App","react_apollo_browser_umd","styled_components_browser_esm","Components_Header","Components_Body","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.801d71f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plant1.6cd1c9cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/plant2.9456538d.png\";","module.exports = __webpack_public_path__ + \"static/media/plant3.99f374b9.png\";","module.exports = __webpack_public_path__ + \"static/media/plant4.90f6e506.png\";","module.exports = __webpack_public_path__ + \"static/media/plant5.220341e8.png\";","module.exports = __webpack_public_path__ + \"static/media/montsera.33b23d6a.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.330744a6.png\";","module.exports = __webpack_public_path__ + \"static/media/koala.d6399930.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat.1ca8bb86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat2.f44218fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog.accd8fde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog2.a7286e57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog3.9849aa67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chicken.bdbfa5f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/horse.727ac957.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spider.de16f4ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ogg-Roman.56aae150.otf\";","import styled from \"styled-components\";\r\n\r\nconst Chunk = styled.div`\r\n  position: relative;\r\n  min-height: 75vh;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default Chunk;\r\n","import React, { Component } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport styled from \"styled-components\";\r\n\r\nconst JungleBox = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: auto;\r\n  min-width: 20%;\r\n  z-index: 10;\r\n`;\r\n\r\nclass JungleScene extends Component {\r\n  state = {\r\n    transition: null\r\n  };\r\n  startDrag = () => this.setState({ transition: null });\r\n  stopDrag = () => this.setState({ transition: \"all 500ms\" });\r\n\r\n  render() {\r\n    const { x, y, w, plant } = this.props;\r\n    const { transition } = this.state;\r\n\r\n    return (\r\n      <Draggable onStart={this.startDrag} onStop={this.stopDrag}>\r\n        <JungleBox\r\n          style={{\r\n            transition,\r\n\r\n            width: `${w}%`,\r\n            left: `${x}%`,\r\n            top: `${y}%`,\r\n            height: \"auto\"\r\n          }}\r\n          src={plant}\r\n          draggable=\"false\"\r\n        />\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JungleScene;\r\n","// Shuffle an array helper function\r\nexport const shuffle = a => {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst ChunkDesc = styled.figcaption`\r\n  position: relative;\r\n  width:100%;\r\n  padding:16px 32px\r\n  text-align:center;\r\n  color:${props => props.theme.grey};\r\n  max-width:75%;\r\n  margin: 0 auto 64px;\r\n\r\n  @media(max-width:600px) {\r\n    padding:8px 12px;\r\n    max-width:100%;\r\n  }\r\n`;\r\n\r\nexport default ChunkDesc;\r\n","import styled from \"styled-components\";\r\nimport Chunk from \"../../shared/Chunk\";\r\n\r\nconst JungleChunk = styled(Chunk)`\r\n  overflow: hidden;\r\n  background-position: center;\r\n  background-size: cover;\r\n`;\r\nexport default JungleChunk;\r\n","import React, { Component } from \"react\";\r\nimport JungleScene from \"./JungleScene\";\r\nimport styled from \"styled-components\";\r\nimport { shuffle } from \"../../../utils\";\r\nimport ChunkDesc from \"../../shared/ChunkDesc\";\r\nimport JungleChunk from \"./JungleChunk\";\r\n\r\nimport Plant1 from \"./assets/fauna/plant1.jpg\";\r\nimport Plant2 from \"./assets/fauna/plant2.png\";\r\nimport Plant3 from \"./assets/fauna/plant3.png\";\r\nimport Plant4 from \"./assets/fauna/plant4.png\";\r\nimport Plant5 from \"./assets/fauna/plant5.png\";\r\nimport Montsera from \"./assets/fauna/montsera.png\";\r\nimport Heart from \"./assets/fauna/heart.png\";\r\n\r\nimport Koala from \"./assets/animals/koala.jpg\";\r\n// import Monkie from \"./assets/animals/monkie.jpg\";\r\nimport Cat from \"./assets/animals/cat.jpg\";\r\nimport Cat2 from \"./assets/animals/cat2.jpg\";\r\nimport Dog from \"./assets/animals/dog.jpg\";\r\nimport Dog2 from \"./assets/animals/dog2.jpg\";\r\nimport Dog3 from \"./assets/animals/dog3.jpg\";\r\nimport Chicken from \"./assets/animals/chicken.jpg\";\r\nimport Horse from \"./assets/animals/horse.jpg\";\r\nimport Spider from \"./assets/animals/spider.jpg\";\r\n\r\nconst animals = [Koala, Cat, Cat2, Dog, Dog2, Dog3, Chicken, Horse, Spider];\r\nconst plantsArray = [\r\n  Plant1,\r\n  Montsera,\r\n  Heart,\r\n  Plant2,\r\n  Plant3,\r\n  Plant4,\r\n  Plant5,\r\n  Plant1,\r\n  Plant2,\r\n  Plant3\r\n];\r\n\r\nconst ShuffleBtn = styled.button`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 75%;\r\n  transform: translate(-50%, 0);\r\n  border-radius: 5px;\r\n  border-radius: 5px;\r\n  padding: 5px 10px;\r\n  border: none;\r\n\r\n  &:active {\r\n  }\r\n`;\r\n\r\nconst randomNumber = (max, min) => Math.random() * (max - min) + min;\r\n\r\nclass JungleSearch extends Component {\r\n  state = {\r\n    bg: shuffle(animals)[0],\r\n    plants: shuffle(plantsArray)\r\n  };\r\n\r\n  shuffle = () => {\r\n    // on click of the bg, shuffle everything!\r\n    let bg;\r\n    if (animals.length === 1) {\r\n      bg = animals[0];\r\n    } else {\r\n      animals.splice(0, 1);\r\n      bg = animals[0];\r\n    }\r\n\r\n    const plants = shuffle(plantsArray);\r\n    this.setState({ bg, plants });\r\n  };\r\n\r\n  render() {\r\n    const { bg, plants } = this.state;\r\n    return [\r\n      <JungleChunk key=\"chunk\" style={{ backgroundImage: `url(${bg})` }}>\r\n        {plants.map((plant, i) => {\r\n          // Randomly generate x/y position for jungle box\r\n          let x = randomNumber(60, -20);\r\n          let y = randomNumber(60, -20);\r\n\r\n          // Randomly generate width for jungle box\r\n          let w = randomNumber(100, 45);\r\n\r\n          // Ensures top left is at least covered\r\n          if (i < 5) {\r\n            x = randomNumber(40, 10);\r\n            y = randomNumber(40, 10);\r\n            w = randomNumber(80, 50);\r\n          }\r\n\r\n          return <JungleScene key={i} x={x} y={y} w={w} plant={plant} />;\r\n        })}\r\n        <ShuffleBtn onClick={this.shuffle}>\r\n          <span role=\"img\" aria-label=\"search\">\r\n            🔍🔍\r\n          </span>\r\n        </ShuffleBtn>\r\n      </JungleChunk>,\r\n      <ChunkDesc key=\"chunkdesc\">\r\n        Spread the foliage to find some wild forest animals! Uses React.\r\n      </ChunkDesc>\r\n    ];\r\n  }\r\n}\r\n\r\nexport default JungleSearch;\r\n","import JungleSearch from \"./JungleSearch\";\r\n\r\nexport default JungleSearch;\r\n","import Body from './Body';\r\n\r\nexport default Body;","import React, { Component } from \"react\";\r\nimport Chunk from \"../shared/Chunk\";\r\nimport JungleSearch from \"./JungleSearch\";\r\n\r\n// Map over body chunks we get from state\r\n// from here we render a body piece\r\n// in the body piece we render the type of body it is\r\n\r\nclass Body extends Component {\r\n  render() {\r\n    return (\r\n      <Chunk>\r\n        <JungleSearch />\r\n      </Chunk>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Contact = styled.p`\r\n  text-align: right;\r\n  font-family: \"Ogg\", serif;\r\n  color: ${props => props.theme.grey};\r\n  padding: 100px 0 30px;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nconst Footer = () => <Contact>k.w.schneid@gmail.com</Contact>;\r\n\r\nexport default Footer;\r\n","import Footer from \"./Footer\";\r\n\r\nexport default Footer;\r\n","export const messages = [\r\n  \"Man, Name Of\",\r\n  \"Man Call\",\r\n  \"I'm Name\",\r\n  \"Man Name\",\r\n  \"who r u? who am I?\"\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nconst Binkie = styled.h1`\r\n  font-size: 25vmin;\r\n  transition: all 1s ease;\r\n`;\r\n\r\nexport default Binkie;\r\n","import React, { Component } from \"react\";\r\nimport { messages } from \"./data\";\r\n\r\nimport Binkie from \"./Binkie\";\r\n\r\nconst colors = [\r\n  \"#5F6460\",\r\n  \"#AC836B\",\r\n  \"#C5E199\",\r\n  \"#5DC99F\",\r\n  \"#3B6D81\",\r\n  \"#6F677F\",\r\n  \"#812A3A\",\r\n  \"#79341A\",\r\n  \"#504235\",\r\n  \"#7c7153\",\r\n  \"#604041\",\r\n  \"#7b7247\",\r\n  \"#3d3938\",\r\n  \"#847766\",\r\n  \"#7d464b\"\r\n];\r\n\r\nconst randomInt = max =>\r\n  Math.floor(Math.random() * (Math.floor(max) - Math.random(max)));\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    message: messages[randomInt(messages.length)],\r\n    shadow: \"0 0 0 #fff\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.reRainbow(), 10);\r\n  }\r\n\r\n  reRainbow = () => {\r\n    const shadow = `0 0 0 ${colors[randomInt(colors.length)]}, ${randomInt(\r\n      1\r\n    )}vw ${randomInt(4)}vw ${randomInt(4)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(2)}vw ${randomInt(8)}vw ${randomInt(8)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(3)}vw ${randomInt(12)}vw ${randomInt(12)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(4)}vw ${randomInt(16)}vw ${randomInt(16)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(5)}vw ${randomInt(20)}vw ${randomInt(20)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(6)}vw ${randomInt(24)}vw ${randomInt(24)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(7)}vw ${randomInt(28)}vw ${randomInt(28)}vw  ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(8)}vw ${randomInt(32)}vw ${randomInt(32)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    }`;\r\n\r\n    this.setState({ shadow });\r\n  };\r\n\r\n  render() {\r\n    const { message, shadow } = this.state;\r\n    console.log(shadow);\r\n    return (\r\n      <header style={{ minHeight: \"90vh\" }}>\r\n        <h2>{message}</h2>\r\n        <Binkie\r\n          style={{ textShadow: shadow }}\r\n          onClick={this.reRainbow}\r\n          onMouseOver={this.reRainbow}\r\n        >\r\n          binkie\r\n        </Binkie>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport Body from './Components/Body';\r\nimport Footer from './Components/Footer';\r\nimport Header from './Components/Header';\r\nimport Ogg from './assets/fonts/Ogg-Roman.otf';\r\n\r\nconst theme = {\r\n  grey: '#B9B4AF',\r\n  main: '#232323',\r\n  gradient:\r\n    'linear-gradient(#5F6460, #AC836B, #C5E199, #5DC99F, #3B6D81, #6F677F, #812A3A, #79341A,#504235)',\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Work+Sans');\r\n  @font-face {\r\n    font-family: 'Ogg';\r\n    src: url(${Ogg});\r\n  }\r\n\r\n  * {\r\n    box-sizing:border-box;\r\n    padding:0;\r\n    margin:0;\r\n  }\r\n  html {\r\n    font-size:62.5%;\r\n  }\r\n  body {\r\n    background: ${props => props.theme.gradient};\r\n    padding:15px;\r\n    color:${props => props.theme.main};\r\n    font-size:2.4rem;\r\n\r\n    @media(max-width:550px) {\r\n      padding:10px;\r\n    }\r\n  }\r\n  h1,h2,h3,h4,h5,h6 { font-family: 'Ogg', serif; }\r\n  p,span,a,label,button,textarea,li,figcaption { font-family:'Work Sans', sans-serif; font-size:1.6rem; }\r\n`;\r\n\r\nconst AppCont = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  background: white;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% - 60px);\r\n  max-width: 1200px;\r\n  height: auto;\r\n  margin: 0 auto;\r\n  padding-top: 100px;\r\n\r\n  @media (max-width: 720px) {\r\n    width: calc(100% - 40px);\r\n    padding-top: 40px;\r\n  }\r\n`;\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://nodejs-d46mbauhe.now.sh',\r\n});\r\n\r\nconst App = () => (\r\n  <ApolloProvider client={client}>\r\n    <ThemeProvider theme={theme}>\r\n      <AppCont>\r\n        <Container>\r\n          <Header />\r\n          <Body />\r\n          <Footer />\r\n          <GlobalStyle />\r\n        </Container>\r\n      </AppCont>\r\n    </ThemeProvider>\r\n  </ApolloProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}